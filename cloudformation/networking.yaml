AWSTemplateFormatVersion: "2010-09-09"
Description: "This is template for base networking in AWS"

# Metadata
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Networking configuration"
        Parameters:
          - VPCCIDR
      -
        Label:
          default: "Tags configuration"
        Parameters:
          - Environment
          - ProjectName
          - ProjectID

# Parameters
Parameters:
  Environment:
    Type: String
    Default: dev
    Description: Environment for the project. Dev by default.
    AllowedValues:
      - dev
      - staging
      - production

  ProjectName:
    Type: String
    Description: Name of the project.

  ProjectID:
    Type: String
    Description: ID of the project.

  VPCCIDR:
    Type: String
    Default: 10.0.0.0/16
    AllowedValues:
      - 10.0.0.0/16
      - 10.0.0.0/24
    Description: Enter CIDR for VPC. 10.0.0.0/16 by default.

# Resources
Resources:
  VPC01:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Project ID
          Value: !Ref ProjectID
        - Key: Resource Name
          Value: VPC01

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.0.0/24
      VpcId: !Ref VPC01  
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Project ID
          Value: !Ref ProjectID
        - Key: Resource Name
          Value: PublicSubnet1
  
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1b
      CidrBlock: 10.0.1.0/24
      VpcId: !Ref VPC01 
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Project ID
          Value: !Ref ProjectID
        - Key: Resource Name
          Value: PublicSubnet2
      
  
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.2.0/24
      VpcId: !Ref VPC01  
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Project ID
          Value: !Ref ProjectID
        - Key: Resource Name
          Value: PrivateSubnet1
  
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1b
      CidrBlock: 10.0.3.0/24
      VpcId: !Ref VPC01 
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Project ID
          Value: !Ref ProjectID
        - Key: Resource Name
          Value: PrivateSubnet2

  IG01:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Project ID
          Value: !Ref ProjectID
        - Key: Resource Name
          Value: IG01

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref IG01
      VpcId: !Ref VPC01

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC01
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Project ID
          Value: !Ref ProjectID
        - Key: Resource Name
          Value: RouteTable

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IG01
      RouteTableId: !Ref RouteTable

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet2

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Demo security group
      VpcId: !Ref VPC01
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Project ID
          Value: !Ref ProjectID
        - Key: Resource Name
          Value: SecurityGroup

  NACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC01
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Project ID
          Value: !Ref ProjectID
        - Key: Resource Name
          Value: NACL

  NACLEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref NACL
      Protocol: -1
      RuleAction: allow
      RuleNumber: 100

  NACLExit:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: true
      NetworkAclId: !Ref NACL
      Protocol: -1
      RuleAction: allow
      RuleNumber: 100